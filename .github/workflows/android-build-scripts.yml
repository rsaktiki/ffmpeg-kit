name: android build scripts

on:
  workflow_dispatch:
  push:
    branches:
      - development
      - main
    paths:
      - '.github/workflows/android-build-scripts.yml'
      - 'android/**'
      - '!android/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'android.sh'
  pull_request:
    branches:
      - development
      - main
    paths:
      - '.github/workflows/android-build-scripts.yml'
      - 'android/**'
      - '!android/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'android.sh'

jobs:
  build-main-on-linux:
    name: android main on linux
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        ndk-version: [ 'r26d-linux' ]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: set up adopt jdk 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: prerequisites
        run: ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --uninstall "cmake;3.10.2.4988404" "cmake;3.18.1"
      - name: set up android ndk
        run: |
          curl -s "https://dl.google.com/android/repository/android-ndk-${{ matrix.ndk-version }}.zip" -o ndk.zip
          unzip -q -o ndk.zip -d .ndk
          echo "ANDROID_NDK_ROOT=$PWD/.ndk/$(ls .ndk)" >> $GITHUB_ENV
      - name: run the build script
        run: ./android.sh -d --enable-android-media-codec --enable-android-zlib --disable-arm-v7a
      - name: print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: print ffbuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
      - name: collect & zip artifacts
        if: always()
        run: |
          set -euxo pipefail
          mkdir -p artifacts

          # Logs (selalu bawa)
          [[ -f build.log ]] && cp -f build.log artifacts/ || true
          [[ -f src/ffmpeg/ffbuild/config.log ]] && \
            mkdir -p artifacts/ffbuild && cp -f src/ffmpeg/ffbuild/config.log artifacts/ffbuild/ || true

          # Kumpulkan keluaran umum: AAR/APK/AAB/SO/STATIC LIB
          shopt -s globstar nullglob
          for f in **/*.aar **/*.apk **/*.aab **/libs/**/*.so **/jniLibs/**/*.so **/build/**/*.so **/build/**/*.a; do
            d="artifacts/$(dirname "$f")"
            mkdir -p "$d"
            cp -f "$f" "$d/"
          done

          # (Opsional) kalau ada folder prebuilt/ atau hasil FFmpeg kustom, bawa juga tapi exclude object
          for p in prebuilt src/ffmpeg/build src/ffmpeg/android; do
            if [ -d "$p" ]; then
              rsync -a --exclude='*.o' --exclude='*.obj' --exclude='.git' "$p"/ "artifacts/$p"/ || true
            fi
          done

          (cd artifacts && zip -r ../android-${{ matrix.ndk-version }}-${{ github.run_number }}.zip .)

      - name: upload artifact zip
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-${{ matrix.ndk-version }}-${{ github.run_number }}
          path: android-${{ matrix.ndk-version }}-${{ github.run_number }}.zip
          if-no-files-found: warn
          retention-days: 14
